from InquirerPy import inquirer
import pandas as pd
import json
import os

def train_model(csv_path, json_path, model_type, evaluation_model):
    import pandas as pd
    import json
    import os

    # Naƒç√≠tanie konfigur√°cie z JSON s√∫boru
    try:
        with open(json_path, "r") as config_file:
            config = json.load(config_file)
    except Exception as e:
        print(f"Chyba pri naƒç√≠tan√≠ JSON konfigur√°cie: {e}")
        return

    # Naƒç√≠tanie datasetu
    try:
        df = pd.read_csv(csv_path)
    except Exception as e:
        print(f"Chyba pri naƒç√≠tan√≠ CSV s√∫boru: {e}")
        return

    # Vytvorenie vstupov a v√Ωstupov
    try:
        X = df.drop(columns=["Family", "Hash", "Category"])
        y = df["Family"]
    except KeyError as e:
        print(f"Ch√Ωbaj√∫ce stƒ∫pce v datasete: {e}")
        return

    # Debug v√Ωpisy
    print(f"\n‚úÖ Dataset naƒç√≠tan√Ω: {df.shape[0]} riadkov, {df.shape[1]} stƒ∫pcov")
    print(f"‚û°Ô∏è Model: {model_type}")
    print(f"üß† Evalu√°cia bude spusten√°: {evaluation_model}")
    print(f"üîß Konfigur√°cia: {config}")

    # Tu nesk√¥r implementuj: tr√©ning modelu, evalu√°ciu, ulo≈æenie v√Ωsledkov


def main():
    while True:
        main_choice = inquirer.select(
            message="Vyber si akciu:",
            choices=[
                "Trenovanie klasifikacneho modelu",
                "Vysvetlitelnost modelu",
                "Ukonƒçi≈•"
            ],
        ).execute()

        if main_choice == "Trenovanie klasifikacneho modelu":
            while True:
                model_choice = inquirer.select(
                    message="Vyber si klasifikacny model na trenovanie:",
                    choices=[
                        "AdaBoost Classifier",
                        "Bagging Classifier",
                        "ExtraTrees Classifier",
                        "LGBM Classifier",
                        "Random Forest Classifier",
                        "XGBoost Classifier",
                        "Sp√§≈•"
                    ],
                ).execute()

                if model_choice == "Sp√§≈•":
                    break

                # Cesta k CSV s√∫boru
                csv_path = inquirer.text(
                    message="Zadaj cestu k CSV s√∫boru s d√°tami:"
                ).execute()

                # Cesta k JSON konfigur√°cii
                json_path = inquirer.text(
                    message="Zadaj cestu k JSON s√∫boru s konfigur√°ciou:"
                ).execute()

                # Chce pou≈æ√≠vateƒæ spusti≈• evalu√°ciu?
                evaluation_model = inquirer.confirm(
                    message="Chce≈° po tr√©novan√≠ spusti≈• evalu√°ciu a ulo≈æi≈• v√Ωsledky?",
                    default=True
                ).execute()

                # Overenie existencie
                if not os.path.exists(csv_path):
                    print(f"S√∫bor {csv_path} neexistuje.")
                    continue
                if not os.path.exists(json_path):
                    print(f"S√∫bor {json_path} neexistuje.")
                    continue

                # Naƒç√≠tanie s√∫borov
                try:
                    data = pd.read_csv(csv_path)
                    with open(json_path, "r") as f:
                        config = json.load(f)
                except Exception as e:
                    print(f"Chyba pri naƒç√≠tan√≠ s√∫borov: {e}")
                    continue

                # Zavolanie hlavnej funkcie
                train_model(data, config, model_choice, evaluation_model)

        elif main_choice == "Vysvetlitelnost modelu":
            while True:
                explain_choice = inquirer.select(
                    message="Vyber si metodu vysvetlitelnosti:",
                    choices=[
                        "SHAP (Global & Local Explainer)",
                        "LIME (Local Explainer)",
                        "Sp√§≈•"
                    ],
                ).execute()

                if explain_choice == "Sp√§≈•":
                    break
                print(f"\nZvolil si vysvetlitelnost: {explain_choice}\n")
                # Tu sa nesk√¥r prid√° logika vysvetlenia

        elif main_choice == "Exit":
            print("\nUkonƒçujem aplik√°ciu. Maj sa!\n")
            break

if __name__ == "__main__":
    main()
